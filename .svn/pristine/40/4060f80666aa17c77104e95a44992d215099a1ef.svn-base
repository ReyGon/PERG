<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>