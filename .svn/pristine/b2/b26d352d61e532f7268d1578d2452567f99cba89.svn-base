Imports System.Linq
Imports Telerik.WinControls
Imports Telerik.WinControls.UI

Public Class frmComprasConcepto
    Dim permiso As New clsPermisoUsuario

    Private _idEntrada As Integer

    Public Property idEntrada() As Integer
        Get
            idEntrada = _idEntrada
        End Get
        Set(ByVal value As Integer)
            _idEntrada = value
        End Set
    End Property

    Private Sub frmComprasConcepto_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load
        mdlPublicVars.fnFormatoGridMovimientos(grdProductos)
        fnLlenarDatos()
        fnSumarios()
        mdlPublicVars.fnGrid_iconos(Me.grdProductos)
    End Sub

    'Funcion utilizada para agregar las filas summary
    Private Sub fnSumarios()
        'Agregamos antes las filas de sumas
        Dim summaryId As New GridViewSummaryItem("Codigo", mdlPublicVars.SimboloRecuento + "={0}", GridAggregateFunction.Count)
        Dim summaryTotal As New GridViewSummaryItem("Total", mdlPublicVars.formatoMonedaGridTelerik, GridAggregateFunction.Sum)
        'agregar la fila de operaciones aritmeticas
        Dim summaryRowItem As New GridViewSummaryRowItem(New GridViewSummaryItem() {summaryId, summaryTotal})

        grdProductos.SummaryRowsTop.Add(summaryRowItem)
    End Sub

    'Funcion que se utliza para llenar los datos de unqa salida cuando se esta en modificar
    Private Sub fnLlenarDatos()
        Try
            grdProductos.DataSource = Nothing

            Dim entrada As tblEntrada = (From x In ctx.tblEntradas Where x.idEntrada = idEntrada
                                       Select x).FirstOrDefault

            lblProveedor.Text = entrada.tblProveedor.negocio
            lblFechaRegistro.Text = Format(entrada.fechaCompra, mdlPublicVars.formatoFecha)
            lblUsuario.Text = entrada.tblUsuario1.nombre
            lblTotal.Text = Format(entrada.total, mdlPublicVars.formatoMoneda)
            lblDocumento.Text = entrada.documento
            lblPreforma.Text = If(entrada.preforma, "SI", "NO")
            lblCompra.Text = If(entrada.compra, "SI", "NO")
            lblAnulada.Text = If(entrada.anulado, "SI", "NO")
            'AGREGAMOS LOS PRODUCTOS AL GRID
            'Obtenemos el detalle de ese pedido
            Dim lDetalles As IQueryable = (From x In ctx.tblEntradasDetalles Where x.idEntrada = idEntrada _
                                            Select Codigo = x.tblArticulo.codigo1, Nombre = x.tblArticulo.nombre1, Cantidad = x.cantidad, _
                                            Costo = x.costoIVA, Total = (x.costoIVA * x.cantidad))

            Me.grdProductos.DataSource = lDetalles
            fnConfiguracion()
        Catch ex As Exception
            RadMessageBox.Show(ex.Message, mdlPublicVars.nombreSistema, MessageBoxButtons.OK, RadMessageIcon.Error)
        End Try
    End Sub

    'Funcion utilizada para configurar el grid
    Private Sub fnConfiguracion()
        If Me.grdProductos.ColumnCount > 0 Then
            mdlPublicVars.fnGridTelerik_formatoMoneda(grdProductos, "Total")
            mdlPublicVars.fnGridTelerik_formatoMoneda(grdProductos, "Costo")

            Me.grdProductos.Columns("Codigo").Width = 50
            Me.grdProductos.Columns("Nombre").Width = 200
            Me.grdProductos.Columns("Cantidad").Width = 60
            Me.grdProductos.Columns("Costo").Width = 80
            Me.grdProductos.Columns("Total").Width = 90
        End If
    End Sub

    Private Sub fnDocSalida() Handles Me.panel0
        Try
            frmDocumentosSalida.txtTitulo.Text = "Compra a: " & lblProveedor.Text & ", Doc: " & lblDocumento.Text
            frmDocumentosSalida.grd = Me.grdProductos
            frmDocumentosSalida.Text = "Docs. de Salida"
            frmDocumentosSalida.codigo = 0
            frmDocumentosSalida.bitCliente = False
            frmDocumentosSalida.bitGenerico = True
            permiso.PermisoFrmEspeciales(frmDocumentosSalida, False)
        Catch ex As Exception
            RadMessageBox.Show(ex.Message, mdlPublicVars.nombreSistema, MessageBoxButtons.OK, RadMessageIcon.Error)
        End Try
    End Sub

    'SALIR
    Private Sub fnSalir() Handles Me.panel1
        Me.Close()
    End Sub

    Private Sub grdProductos_CellDoubleClick(ByVal sender As System.Object, ByVal e As Telerik.WinControls.UI.GridViewCellEventArgs) Handles grdProductos.CellDoubleClick
        'Obtenemos el valor de la observacion
        Dim fila As Integer = mdlPublicVars.fnGrid_codigoFilaSeleccionada(grdProductos)
        Dim observacion As String = CStr(Me.grdProductos.Rows(fila).Cells("txbObservacion").Value)

        RadMessageBox.Show(observacion, mdlPublicVars.nombreSistema, MessageBoxButtons.OK, RadMessageIcon.Info)
    End Sub

End Class
